@charset "UTF-8";
@font-face {
  font-family: "Nunito sans";
  src: url(../../fonts/NunitoSans10pt-Regular.woff2) format(woff2);
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Nunito sans";
  src: url(../../fonts/NunitoSans10pt-Medium.woff2) format(woff2);
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Nunito sans";
  src: url(../../fonts/NunitoSans10pt-Bold.woff2) format(woff2);
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
._container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

@media (width > 1440px) {
  .visible-desktop {
    display: none !important;
  }
}

@media (width > 1024px) {
  .visible-tablet {
    display: none !important;
  }
}

@media (width > 768px) {
  .visible-mobile {
    display: none !important;
  }
}

@media (width > 425px) {
  .visible-mobile-small {
    display: none !important;
  }
}

:root {
  --color-dark-1: #16171b;
  --color-dark-2: #080a0e;
  --color-dark-3: #25262b;
  --color-grey-1: #333333;
  --color-green-1: #44944A;
  --color-semi-light: #c2c2c2;
  --color-light: #FFFFFF;
  --color-accent: #FFD11A;
  --container-width: 1200px;
  --container-padding-x: 15px;
  --border-radius-circle: 50%;
  --transition-alt: .1s;
  --transition-duration: .2s;
  --transition: .2s linear;
}
@media (width <= 1440px) {
  :root {
    --container-width: 1080px;
  }
}

html.is-dark-theme {
  --color-light: #000000;
  --color-semi-light: #25262b;
  --color-dark-2: #c2c2c2;
  --color-dark-1: #ffffff;
  --color-dark-3: #8f8f8f;
}

body {
  font-family: "Nunito sans", sans-serif;
  background-color: var(--color-dark-1);
  font-weight: 500;
  color: var(--color-light);
  font-size: 16px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

main {
  display: flex;
  align-items: center;
  justify-content: center;
}

.header {
  position: sticky;
  left: 0;
  top: 0;
  padding: 30px 0px;
}
@media (width <= 1024px) {
  .header {
    padding: 20px 0;
  }
}
@media (width <= 425px) {
  .header {
    padding: 10px 0;
  }
}
.header__body-inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.header .inner__logo {
  color: var(--color-light);
  text-decoration: none;
  font-size: 24px;
  font-weight: 700;
  text-transform: uppercase;
}
.header .switcher__theme {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  gap: 1rem;
  background-color: var(--color-dark-3);
  border-radius: 50rem;
  border: 0.3rem solid var(--color-dark-3);
  outline: 0.1rem solid transparent;
  padding: 0.4rem;
  box-shadow: 0 0 8px var(--color-dark-1);
  transition: 0.2s linear;
}
@media (hover: hover) {
  .header .switcher__theme:hover {
    outline: 1px solid var(--color-light);
  }
}
@media (hover: none) {
  .header .switcher__theme:active {
    outline: 1px solid var(--color-light);
  }
}
.header .switcher__theme-span {
  display: inline-block;
  width: auto;
  height: auto;
  line-height: 0;
  z-index: 20;
}
.header .switcher__theme-span svg {
  stroke: var(--color-light);
  width: 100%;
}
.header .switcher__theme::before {
  content: "";
  height: 100%;
  aspect-ratio: 1;
  position: absolute;
  left: 0;
  top: 0;
  background-color: var(--color-dark-2);
  border-radius: 50%;
  transition: var(--transition);
}

html.is-dark-theme .switcher__theme::before {
  left: 100%;
  transform: translateX(-100%);
}

.form {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  background-color: var(--color-dark-2);
  padding: 2rem 2.5rem;
  border-radius: 3rem;
  text-align: center;
  row-gap: 0.5rem;
  width: auto;
  height: auto;
  position: relative;
  z-index: 2;
}
.form label {
  font-size: 16px;
}
@media (width <= 1024px) {
  .form {
    row-gap: 0.5rem;
    border-radius: 2rem;
  }
}
.form .field__errors:empty {
  scale: 0;
}
.form .field:has([required]) .field__label::after,
.form .radios:has([required]) .radios__legend::after {
  content: "*";
  padding-inline: 0.15em;
  color: var(--color-accent);
}
.form .field {
  display: flex;
  flex-direction: column;
  transition: var(--transition);
}
.form .field__errors {
  color: var(--color-accent);
  transition: var(--transition);
  font-size: 9px;
  max-width: 240px;
}
.form .field__label {
  font-size: 16px;
}
@media (width <= 1024px) {
  .form .field__label {
    font-size: 14px;
  }
}
@media (width <= 768px) {
  .form .field__label {
    font-size: 12px;
  }
}
.form .field input {
  background: none;
  border: 1px solid var(--color-semi-light);
  border-radius: 3rem;
  height: 2.1rem;
  color: var(--color-light);
  padding-inline: 0.5rem;
  outline: 1px solid transparent;
  transition: var(--transition);
  font-weight: 400;
  font-size: 14px;
  width: 250px;
}
@media (width <= 1024px) {
  .form .field input {
    width: 250px;
    height: 2.25rem;
  }
}
@media (width <= 768px) {
  .form .field input {
    width: 220px;
  }
}
@media (hover: hover) {
  .form .field input:hover {
    box-shadow: 0 0 1rem 0 var(--color-semi-light);
  }
}
@media (hover: none) {
  .form .field input:active {
    box-shadow: 0 0 1rem 0 var(--color-semi-light);
  }
}
.form .field input:focus {
  box-shadow: 0 0 1rem 0 var(--color-dark-3);
  background-color: var(--color-dark-3);
}
.form .field input:focus label {
  margin-bottom: 5px;
}
.form .radios {
  border: 2px solid var(--color-grey-1);
  border-radius: 300rem;
  padding-bottom: 0.3rem;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.form .radios__legend {
  padding-inline: 3px;
}
.form .button {
  width: 80%;
  background-color: var(--color-dark-3);
  padding-block: 0.2rem;
  border-radius: 3rem;
  text-transform: uppercase;
  font-weight: 700;
  font-size: 16px;
  transition: var(--transition-alt) linear;
  border: 2px solid var(--color-dark-1);
  color: var(--color-light);
  position: relative;
}
@media (width <= 1024px) {
  .form .button {
    height: 2rem;
  }
}
@media (hover: hover) {
  .form .button:hover {
    background-color: var(--color-semi-light);
    color: var(--color-dark-1);
  }
}
@media (hover: none) {
  .form .button:active {
    background-color: var(--color-semi-light);
    color: var(--color-dark-1);
  }
}
.form .button:focus {
  background-color: var(--color-light);
  color: #000;
}
.form input[type=radio] {
  width: 10px;
  height: 10px;
  margin-right: 10px;
  border-radius: 50%;
  outline: 2px solid var(--color-dark-3);
  appearance: none;
  outline-offset: 2px;
  transition: var(--transition);
  cursor: pointer;
}
@media (hover: hover) {
  .form input[type=radio]:hover {
    background-color: var(--color-semi-light);
    box-shadow: 0 0 1rem 0 var(--color-semi-light);
  }
}
@media (hover: none) {
  .form input[type=radio]:active {
    background-color: var(--color-semi-light);
    box-shadow: 0 0 1rem 0 var(--color-semi-light);
  }
}
.form input[type=radio]:focus {
  box-shadow: 0 0 1rem 0 var(--color-semi-light);
}
.form input[type=radio]:checked {
  background-color: var(--color-light);
  outline-color: var(--color-light);
}

.box {
  color: #fff;
  width: 100px;
  height: 100px;
  background-color: #000;
  z-index: 100;
  text-align: center;
  font-size: 25px;
}

.form__section {
  position: relative;
  scale: 1;
  opacity: 1;
  animation-name: start-form;
  animation-timing-function: ease;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
}
.form__section::before {
  content: "";
  position: absolute;
  left: 2%;
  top: 2%;
  width: 100px;
  height: 100px;
  background-color: var(--color-light);
  z-index: -12;
  border-radius: 50%;
  box-shadow: 0 0 50px var(--color-semi-light);
  animation-name: before-animation;
  animation-duration: 30s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
@media (width <= 1024px) {
  .form__section::before {
    width: 50px;
    height: 50px;
    animation-name: before-animation-tablet;
  }
}
.form__section::after {
  content: "";
  position: absolute;
  left: 100%;
  top: 50%;
  translate: -100% 0;
  width: 100px;
  height: 100px;
  z-index: -12;
  border-radius: 50%;
  box-shadow: 0 0 50px var(--color-semi-light);
  animation-name: after-animation;
  animation-duration: 30s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
@media (width <= 1024px) {
  .form__section::after {
    width: 50px;
    height: 50px;
    animation-name: after-animation-tablet;
  }
}

@keyframes before-animation {
  0% {
    left: 0;
    top: 0;
  }
  20% {
    left: 0;
    top: 100%;
    translate: 0 -100%;
  }
  25% {
    height: 200px;
  }
  30% {
    height: 100px;
  }
  35% {
    height: 250px;
    width: 250px;
  }
  40% {
    left: 100%;
    top: 100%;
    translate: -105% -105%;
    height: 100px;
    width: 100px;
  }
  60% {
    left: 100%;
    top: 0;
    translate: -100% 0;
  }
}
@keyframes after-animation {
  0% {
    left: 100%;
    top: 50%;
  }
  10% {
    height: 200px;
  }
  20% {
    left: 100%;
    top: 0;
    translate: -100% 0;
    height: 100px;
  }
  30% {
    width: 50px;
  }
  40% {
    left: 0;
    top: 0;
    translate: 0 0;
    width: 100px;
  }
  50% {
    height: 200px;
  }
  60% {
    top: 98%;
    left: 2%;
    translate: 0 -100%;
    height: 100px;
    width: 50px;
  }
  80% {
    width: 200px;
    height: 125px;
  }
  90% {
    width: 100px;
    height: 100px;
  }
  100% {
    left: 100%;
    top: 50%;
    translate: -100% 0;
  }
}
@keyframes start-form {
  from {
    scale: 0.8;
    opacity: 0.4;
  }
  to {
    scale: 1;
    opacity: 1;
  }
}
@keyframes before-animation-tablet {
  0% {
    left: 2%;
    top: 2%;
  }
  20% {
    left: 2%;
    top: 100%;
    translate: 0 -100%;
  }
  25% {
    height: 150px;
  }
  30% {
    height: 60px;
  }
  35% {
    height: 150px;
    width: 200px;
  }
  40% {
    left: 98%;
    top: 98%;
    translate: -105% -105%;
    height: 30px;
    width: 30px;
  }
  60% {
    left: 98%;
    top: 2%;
    translate: -100% 0;
  }
  100% {
    left: 2%;
    top: 2%;
  }
}
@keyframes after-animation-tablet {
  0% {
    left: 100%;
    top: 50%;
  }
  10% {
    height: 150px;
  }
  20% {
    left: 100%;
    top: 2%;
    translate: -100% 0;
    height: 50px;
  }
  30% {
    width: 20px;
  }
  40% {
    left: 0;
    top: 0;
    translate: 0 0;
    width: 50px;
  }
  50% {
    height: 150px;
  }
  60% {
    top: 98%;
    left: 0;
    translate: 0 -100%;
    height: 50px;
    width: 20px;
  }
  80% {
    width: 200px;
    height: 75px;
  }
  90% {
    width: 50px;
    height: 50px;
  }
  100% {
    left: 100%;
    top: 50%;
    translate: -100% 0;
  }
}
.message {
  position: fixed;
  padding: 10px 100px;
  top: -100%;
  border-radius: 5rem;
  background-color: var(--color-dark-3);
  border: 2px solid var(--color-dark-2);
  transition: 0.3s ease-in-out;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
}
.message span {
  color: var(--color-green-1);
}
.message.is-active {
  top: 15px;
  transition: 0.7s ease-in-out;
}

.animation-box {
  position: fixed;
  left: 50%;
  bottom: -85%;
  translate: -50% 0;
  padding: 30px 0px;
  width: 80vw;
  height: 80vh;
  background-color: var(--color-semi-light);
  box-shadow: 0 0 80px var(--color-semi-light);
  border-radius: 50%;
  animation-name: shadow-animation;
  animation-iteration-count: infinite;
  animation-duration: 8s;
  animation-timing-function: linear;
}
@media (width <= 768px) {
  .animation-box {
    display: none;
  }
}

@keyframes shadow-animation {
  0% {
    box-shadow: 0 0 80px var(--color-semi-light);
  }
  50% {
    box-shadow: 0 0 150px var(--color-semi-light);
  }
  100% {
    box-shadow: 0 0 80px var(--color-semi-light);
  }
}

/*# sourceMappingURL=style.css.map */
