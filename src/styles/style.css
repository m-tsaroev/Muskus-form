@charset "UTF-8";
@font-face {
  font-family: "Nunito sans";
  src: url(../../fonts/NunitoSans10pt-Regular.woff2) format(woff2);
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Nunito sans";
  src: url(../../fonts/NunitoSans10pt-Medium.woff2) format(woff2);
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Nunito sans";
  src: url(../../fonts/NunitoSans10pt-Bold.woff2) format(woff2);
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
._container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

@media (width > 1440px) {
  .visible-desktop {
    display: none !important;
  }
}

@media (width > 1024px) {
  .visible-tablet {
    display: none !important;
  }
}

@media (width > 768px) {
  .visible-mobile {
    display: none !important;
  }
}

@media (width > 425px) {
  .visible-mobile-small {
    display: none !important;
  }
}

:root {
  --color-dark-1: #16171b;
  --color-dark-2: #080a0e;
  --color-dark-3: #25262b;
  --color-dark: #000000;
  --color-grey-1: #333333;
  --color-green-1: #44944A;
  --color-semi-light: #c2c2c2;
  --color-light: #FFFFFF;
  --color-accent: #797979;
  --color-bg: var(--color-light);
  --color-font: var(--color-dark);
  --color-accent-font: var(--color-accent);
  --color-border: var(--color-dark);
  --container-width: 1440px;
  --container-padding-x: 15px;
  --border-radius-circle: 50%;
  --transition-alt: .1s;
  --transition-duration: .2s;
  --transition: .2s linear;
}
@media (width <= 1440px) {
  :root {
    --container-width: 1155px;
  }
}

html.is-dark-theme {
  --color-bg: var(--color-dark);
  --color-font: var(--color-light);
  --color-border: var(--color-light);
  --color-dark-2: #c2c2c2;
  --color-dark-1: #ffffff;
  --color-dark-3: #8f8f8f;
}

body {
  font-family: "Nunito sans", sans-serif;
  background-color: var(--color-bg);
  font-weight: 500;
  color: var(--color-font);
  font-size: 16px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  transition: 0.2s linear;
}

main {
  display: flex;
  align-items: center;
  justify-content: center;
}

.header {
  position: sticky;
  left: 0;
  top: 0;
  padding: 30px 0px;
}
@media (width <= 1024px) {
  .header {
    padding: 20px 0;
  }
}
@media (width <= 425px) {
  .header {
    padding: 10px 0;
  }
}
.header__body-inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.header .inner__logo {
  color: var(--color-light);
  text-decoration: none;
  font-size: 24px;
  font-weight: 700;
  text-transform: uppercase;
}
.header .switcher__theme {
  --top: 0.8125rem;
  --left: 0.875rem;
  box-sizing: border-box;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  gap: 1rem;
  border-radius: 50rem;
  border: 0.0625rem solid var(--color-border);
  padding: var(--top) var(--left);
  transition: 0.1s linear;
}
@media (hover: hover) {
  .header .switcher__theme:hover {
    box-shadow: 0 0 0.625rem var(--color-border);
  }
}
@media (hover: none) {
  .header .switcher__theme:active {
    box-shadow: 0 0 0.625rem var(--color-border);
  }
}
.header .switcher__theme-span {
  display: inline-block;
  width: auto;
  height: auto;
  line-height: 0;
  z-index: 20;
}
.header .switcher__theme-span:first-child svg, .header .switcher__theme-span:first-child svg * {
  stroke: var(--color-light);
}
.header .switcher__theme-span:last-child svg, .header .switcher__theme-span:last-child svg * {
  stroke: var(--color-dark);
}
.header .switcher__theme::before {
  content: "";
  width: 2.5rem;
  height: 2.5rem;
  position: absolute;
  left: calc(var(--left) - 0.5rem);
  top: calc(var(--top) - 0.5rem);
  background-color: var(--color-font);
  border-radius: 50%;
  transition: var(--transition);
}

html.is-dark-theme .switcher__theme::before {
  left: calc(100% - (var(--left) - 0.5rem));
  transform: translateX(-100%);
}

.form {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 2.5rem;
  border: 0.0625rem solid var(--color-border);
  border-radius: 3.75rem;
  text-align: center;
  row-gap: 1.125rem;
  width: auto;
  height: auto;
  position: relative;
  z-index: 2;
  box-shadow: 0 0 1.0625rem var(--color-accent);
}
.form__title {
  font-size: 1.5rem;
  user-select: none;
}
.form label {
  font-size: 16px;
}
@media (width <= 1024px) {
  .form {
    row-gap: 0.5rem;
    border-radius: 2rem;
  }
}
.form .field__errors:empty {
  scale: 0;
}
.form .field:has([required]) .field__label::after {
  content: "*";
  padding-inline: 0.15em;
  color: var(--color-accent);
}
.form .field {
  display: flex;
  flex-direction: column;
  transition: var(--transition);
  align-items: start;
}
.form .field__errors {
  color: var(--color-accent);
  transition: var(--transition);
  font-size: 0.75rem;
  max-width: 240px;
  text-align: left;
}
.form .field__label {
  font-size: 16px;
  font-weight: 500;
}
@media (width <= 1024px) {
  .form .field__label {
    font-size: 14px;
  }
}
@media (width <= 768px) {
  .form .field__label {
    font-size: 12px;
  }
}
.form .field input {
  width: 20rem;
  height: 2.5rem;
  background: none;
  border: 1px solid var(--color-border);
  border-radius: 3rem;
  color: var(--color-font);
  padding-inline: 0.5rem;
  outline: 1px solid transparent;
  transition: var(--transition);
  font-weight: 400;
  font-size: 14px;
}
@media (width <= 1024px) {
  .form .field input {
    width: 250px;
    height: 2.25rem;
  }
}
@media (width <= 768px) {
  .form .field input {
    width: 220px;
  }
}
@media (hover: hover) {
  .form .field input:hover {
    box-shadow: 0 0 0.625rem var(--color-border);
  }
}
@media (hover: none) {
  .form .field input:active {
    box-shadow: 0 0 0.625rem var(--color-border);
  }
}
.form .field input:focus {
  box-shadow: 0 0 0.625rem var(--color-border);
}
.form .field input:focus label {
  margin-bottom: 5px;
}
.form .button {
  width: 15.625rem;
  height: 3.125rem;
  border: 0.0625rem solid var(--color-border);
  border-radius: 1.875rem;
  text-transform: uppercase;
  font-weight: 700;
  font-size: 1.375rem;
  transition: 0.2s linear;
  color: var(--color-font);
  background: transparent;
  text-align: center;
  position: relative;
  overflow: hidden;
}
.form .button::before {
  content: "";
  position: absolute;
  left: 50%;
  bottom: -120%;
  width: 250%;
  height: 640%;
  background-color: var(--color-accent);
  z-index: -1;
  transition: 0.2s linear;
  filter: blur(5.3125rem);
}
@media (hover: hover) {
  .form .button:hover {
    color: #fff;
  }
  .form .button:hover::before {
    left: -20%;
  }
}
@media (hover: none) {
  .form .button:active {
    color: #fff;
  }
  .form .button:active::before {
    left: -20%;
  }
}
.form .button:focus {
  background-color: var(--color-accent);
}

.message {
  position: fixed;
  padding: 10px 100px;
  top: -100%;
  border-radius: 5rem;
  background-color: var(--color-dark-3);
  border: 2px solid var(--color-dark-2);
  transition: 0.3s ease-in-out;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
}
.message span {
  color: var(--color-green-1);
}
.message.is-active {
  top: 15px;
  transition: 0.7s ease-in-out;
}

/*# sourceMappingURL=style.css.map */
